# Tmux configuration
# Initial version taken from https://gist.github.com/1760427
# Last Modified: 18/08/2023, 21:42:52 +0530

# Global settings
set -g status-justify left
set -g status-left '::[#T]-['
set -g status-left-style none
set -g status-left-length 128
set -g status-right ']::'
set -g status-right-length 80
set -g status-right-style none
set -g window-status-format '#I:#W#F'
set -g window-status-current-format '(#I-#W#F)'
setw -g window-status-separator ""

# send the prefix to client inside window
bind-key C-b send-prefix

# toggle last window like screen
bind-key C-b last-window

# open a man page in new window
bind-key / command-prompt "split-window 'exec man %%'"

# quick view of processes
#bind-key "~" split-window "exec htop"

# scrollback buffer n lines
set -g history-limit 5000

# listen for activity on all windows
set -g bell-action any
#set -g bell-action none

# start window indexing at zero (default)
set -g base-index 0

# tell tmux to use 256 colour terminal
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

# start zsh in interactive mode, not as a login shell
set -g default-command 'zsh -i'

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename off

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
#set -g set-titles-string "tmux.#I.#W"

# don't close windows. just deactivate them. use respawn-window to reactivate.
#setw -g remain-on-exit on

# Key bindings
# reload settings
bind-key R source-file ~/.tmux.conf

# detach client
bind-key d detach
bind-key C-d detach

# choose a client to detach
bind-key D choose-client

# choose window/session
bind-key "'" choose-window
bind-key '"' choose-session

# display visible indicator of each pane
bind-key w display-panes

# navigate panes using jk, and ctrl+jk (no prefix)
bind-key -r j select-pane -t :.-
bind-key -r k select-pane -t :.+
bind-key -r C-j select-pane -t :.-
bind-key -r C-k select-pane -t :.+

# navigate windows using hl, and ctrl-hl (no prefix)
bind-key -r h select-window -t :-
bind-key -r l select-window -t :+
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# swap panes
bind-key -r J swap-pane -D
bind-key -r K swap-pane -U

# Ctrl-Left/Right cycles thru windows (no prefix)

# Ctrl-Up/Down/Left/Right cyles thru panes (no prefix)
bind-key -n "C-Up" select-pane -U
bind-key -n "C-Down" select-pane -D
bind-key -n "C-Left" select-pane -L
bind-key -n "C-Right" select-pane -R

# Cycle to next pane
bind-key -r Tab select-pane -t :.+

# kill current pane/window
bind-key q confirm-before kill-pane
bind-key Q confirm-before kill-window
bind-key C-q confirm-before kill-pane
#bind-key x kill-pane
#bind-key X kill-window

# window layouts (emacs-like)
#bind-key 1 break-pane
#bind-key 2 select-layout even-vertical
#bind-key 3 select-layout even-horizontal
#bind-key o select-pane -U

# specific window layouts
#bind -r y next-layout
#bind o select-layout "active-only"
#bind O select-layout "main-vertical"

# copying and pasting
bind-key [ copy-mode
bind-key ] paste-buffer -s \015

# vi-style controls for copy mode
setw -g mode-keys vi

# list all paste buffers (default key is '#')
bind-key b list-buffers

# choose buffer to paste interactively (default key was '=')
bind-key p choose-buffer

# delete the most recently copied buffer of text (default key was '-')
bind-key x delete-buffer


# Screen-like key bindings
# new window
bind-key c new-window

# next
bind-key -n S-right next-window

# prev
bind-key -n S-left previous-window

# title (default key in tmux is ',')
bind-key A command-prompt "rename-window %%"

# quit
#bind-key \ confirm-before kill-server

# displays
bind-key * list-clients

# redisplay (default key in tmux is 'r')
#bind-key C-l refresh-client
#bind-key l refresh-client
bind-key r refresh-client


# Split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
#bind-key s split-window -v
#bind-key v split-window -h

# alternatively, use better mnemonics for horizontal/vertical splits
bind-key - split-window -v
bind-key _ split-window -v
bind-key | split-window -h

# resize panes like vim
bind-key -r < resize-pane -L 3
bind-key -r > resize-pane -R 3
bind-key -r + resize-pane -U 1
bind-key -r = resize-pane -D 1


# Statusbar settings
# toggle statusbar
bind-key s set status

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000

# Color Themes
# (Gruvbox Dark Medium)
# See https://github.com/egel/tmux-gruvbox/blob/master/tmux-gruvbox-dark.conf
set -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1
setw -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1
setw -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3
setw -g window-status-current-style bg=red,fg=colour237 # fg=bg1
set -g pane-active-border-style fg=colour250 #fg2
set -g pane-border-style fg=colour237 #bg1
set -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1
set -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1
set -g display-panes-active-colour colour250 #fg2
set -g display-panes-colour colour237 #bg1
setw -g clock-mode-colour colour109 #blue
setw -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set -g status-left "#[bg=colour241,fg=colour248] #S #[bg=colour237,fg=colour241,nobold,noitalics,nounderscore]"
set -g status-right "#[bg=colour237,fg=colour239 nobold, nounderscore, noitalics]#[bg=colour239,fg=colour246] %Y-%m-%d %H:%M #[bg=colour239,fg=colour248,nobold,noitalics,nounderscore]#[bg=colour248,fg=colour237] #h "
setw -g window-status-current-format "#[bg=colour214,fg=colour237,nobold,noitalics,nounderscore]#[bg=colour214,fg=colour239] #I #[bg=colour214,fg=colour239,bold] #W #[bg=colour237,fg=colour214,nobold,noitalics,nounderscore]"
setw -g window-status-format "#[bg=colour239,fg=colour237,noitalics]#[bg=colour239,fg=colour223] #I #[bg=colour239,fg=colour223] #W #[bg=colour237,fg=colour239,noitalics]"

# (Solarized Dark)
#
# default statusbar colors
#set-option -g status-bg white #base2
#set-option -g status-fg yellow #yellow
#set-option -g status-attr default

## default window title colors
#set-window-option -g window-status-fg brightyellow #base00
#set-window-option -g window-status-bg default
##set-window-option -g window-status-attr dim

## active window title colors
#set-window-option -g window-status-current-fg brightred #orange
#set-window-option -g window-status-current-bg default
##set-window-option -g window-status-current-attr bright

## pane border
#set-option -g pane-border-fg white #base2
#set-option -g pane-active-border-fg brightcyan #base1

## message text
#set-option -g message-bg white #base2
#set-option -g message-fg brightred #orange

## pane number display
#set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange

## clock
#set-window-option -g clock-mode-colour green #green

## Solarized (Light)
##default statusbar colors
#set-option -g status-style bg=black #base02
#set-option -g status-style fg=yellow #yellow
#set-option -g status-style default

## default window title colors
#set-window-option -g window-status-style bg=brightblue #base0
#set-window-option -g window-status-style fg=default
##set-window-option -g window-status-style dim

## active window title colors
#set-window-option -g window-status-current-style bg=brightred #orange
#set-window-option -g window-status-current-style fg=default
##set-window-option -g window-status-current-style bright

## pane border
#set-option -g pane-border-style fg=black #base02
#set-option -g pane-active-border-style fg=brightgreen #base01

## message text
#set-option -g message-style bg=black #base02
#set-option -g message-style fg=brightred #orange

## pane number display
#set-option -g display-panes-active-colour blue #blue
#set-option -g display-panes-colour brightred #orange

## clock
#set-window-option -g clock-mode-colour green #green

# mouse mode on
set-window-option -g mouse on

# tmux plugin manager
# this must be the last section in this config file
# List of plugins: supports `github_username/repo` or full git repo URLs
#
# tmux-continuum must be the last because it sets status-right for running. See
# https://github.com/tmux-plugins/tmux-continuum/issues/48#issuecomment-603465338
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-suspend'
set -g @plugin 'tmux-plugins/tmux-continuum'

# tmux plugin: tmux-continuum
set -g @continuum-restore 'on'

# tmux plugin: tmux-gruvbox
set -g @tmux-gruvbox 'dark'

# tmux plugin: tmux-yank
set -g @yank_selection 'primary'

# tmux plugin: suspend
# Press F12 to suspend all keys and only operate on current pane.
set -g @suspend_key 'F12'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'

# vim: fen fdl=0 fdm=marker tw=0 nowrap:
